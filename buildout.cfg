[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    qa.cfg

package-name = Products.EasyNewsletter
lang_domain = EasyNewsletter
package-extras = [test]

parts +=
    pocompile
    i18ndude
    create-translations
    update-translations
    find-untranslated
    omelette
    zopepy
    scripts
    sphinx-build

eggs += 
#    Products.PrintingMailHost

extensions =
    mr.developer
sources = sources
auto-checkout = *
#always-checkout = false
always-checkout = force
always-accept-server-certificate = true

[sources]
#plone.api had some nasty bugs - so until released master from github is needed to make this feature work in a a stable manner
plone.api = git git@github.com:plone/plone.api.git

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[pocompile]
recipe = zc.recipe.egg
eggs = zest.pocompile

[create-translations]
recipe = collective.recipe.template
input = inline:
    domain="${buildout:lang_domain}"
    package="${buildout:package-name}"
    echo ""
    directory=$(echo $package | sed -e 's/\./\//g')
    locales=${buildout:directory}/$directory/locales
    if [ -e $locales ]; then
        echo "Skip update translations for $domain because the package already has a locales dir."
    else
        echo "Create locales dir for $domain"
        mkdir -p $locales/de/LC_MESSAGES
        touch $locales/extra.pot
        touch $locales/$domain.pot
        touch $locales/de/LC_MESSAGES/$domain.po
        ${buildout:directory}/bin/i18ndude rebuild-pot --pot $directory/locales/$domain.pot --create $domain $directory/
    fi
output = ${buildout:directory}/bin/createtranslations
mode = 755

[update-translations]
recipe = collective.recipe.template
input = inline:
    domain="${buildout:lang_domain}"
    package="${buildout:package-name}"
    echo ""
    directory=$(echo $package | sed -e 's/\./\//g')
    echo "dir $directory"
    locales=${buildout:directory}/$directory/locales
    if [ ! -e $locales ]; then
        echo "Skip update translations for $domain because the package does not have a locales dir."
    else
        echo "Update translations for $domain"
        if [ ! -f $locales/$domain.pot ]; then
            # Create .pot file if it does not exits yet
            touch $locales/$domain.pot
        fi
        if [ ! -f $locales/de/LC_MESSAGES ]; then
            # Create de/LC_MESSAGES directory if it does not exist yet
            mkdir -p $locales/de/LC_MESSAGES
        fi
        if [ ! -f $locales/de/LC_MESSAGES/$domain.po ]; then
            # Create .po file if it does not exist yet
            touch $locales/de/LC_MESSAGES/$domain.po
        fi
        ${buildout:directory}/bin/i18ndude rebuild-pot --pot $directory/locales/$domain.pot --create $domain $directory/
        ${buildout:directory}/bin/i18ndude sync --pot $locales/$domain.pot $locales/*/LC_MESSAGES/$domain.po
    fi
output = ${buildout:directory}/bin/updatetranslations
mode = 755

[find-untranslated]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    bin/i18ndude find-untranslated `find -L Products -regex ".*\.[cz]?pt"`
output = ${buildout:directory}/bin/find-untranslated
mode = 755
[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[scripts]
recipe = zc.recipe.egg
eggs = zest.releaser

[sphinx-build]
recipe = zc.recipe.egg
eggs =
    Sphinx
    sphinxcontrib-spelling


initialization =
    # This enables po -> mo -compilation
    import os; os.environ['zope_i18n_compile_mo_files'] = 'true'
scripts =
    sphinx-build=sphinx-build

[versions]
zc.buildout =
setuptools =
